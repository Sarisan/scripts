#!/bin/bash
#
# Copyright (C) 2020-2021 Sarisan Sekoohaka
#
AKBUILD_VERSION="2.26"

# Default configuration values
DEF_CONFIGFILE=$HOME/.akbuild_config

# Build
DEF_AKBUILD_JOBS="$(nproc --all)"                                  # How many jobs use to build
DEF_AKBUILD_USERNAME="$USER"
DEF_AKBUILD_HOSTNAME="$HOSTNAME"
DEF_AKBUILD_ARCH="arm64"
DEF_AKBUILD_CC="clang"
DEF_AKBUILD_OPTIONS="LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi-"
DEF_AKBUILD_DEFCONFIG="vendor/ginkgo-perf_defconfig"
DEF_AKBUILD_OUTPUTFILE="Image.gz-dtb"
DEF_AKBUILD_DTBO=true
DEF_AKBUILD_CCACHE=false
DEF_AKBUILD_CCACHE_DIR=""                                          # Custom path to ccache dir

# Kernel
DEF_AKBUILD_KERNELURL="https://github.com/ArrowOS-Devices/android_kernel_xiaomi_ginkgo.git"
DEF_AKBUILD_KERNELBRANCH="arrow-11.0"
DEF_AKBUILD_KERNELNAME="QuicksilveRV2"
DEF_AKBUILD_KDEPTH1=true                                           # Clone kernel with --depth=1

# Clang
DEF_AKBUILD_PREINSTALLED_COMPILER=false
DEF_AKBUILD_COMPILERURL="https://github.com/kdrag0n/proton-clang.git"
DEF_AKBUILD_COMPILERBRANCH="master"
DEF_AKBUILD_COMPILER=""                                            # Custom path to compiler, compiler from AKBUILD_PATH will be used, if not selected. Example: AKBUILD_COMPILER="/home/sarisan/proton-clang"
DEF_AKBUILD_COMPILERBIN="bin"                                      # You can set custom path for binaries, it's needed when you are using AOSP clang or similar compiler repository. Example: AKBUILD_COMPILERBIN="clang-r353983c1/bin"
DEF_AKBUILD_COMPILERLIB="lib"

# Device
DEF_AKBUILD_ANYKERNEL=true
DEF_AKBUILD_ANYKERNELURL="https://github.com/ghostrider-reborn/AnyKernel3"
DEF_AKBUILD_ANYKERNELBRANCH="master"
DEF_AKBUILD_DEVICENAME="ginkgo"

# Colors
DFC="\033[0m"         # Default font
BDFC="\033[1m"        # Default bold font
CDFC="\033[0;36m"     # Default cyan font
GDFC="\033[0;32m"     # Default green font
RDFC="\033[0;31m"     # Default red font

# Default config
AKBUILD_CONFIG="# Android kernel build configuration\nAKBUILD_PATH=\"$PWD\"\nAKBUILD_JOBS=\"$DEF_AKBUILD_JOBS\"\nAKBUILD_USERNAME=\"$DEF_AKBUILD_USERNAME\"\nAKBUILD_HOSTNAME=\"$DEF_AKBUILD_HOSTNAME\"\nAKBUILD_ARCH=\"$DEF_AKBUILD_ARCH\"\nAKBUILD_CC=\"$DEF_AKBUILD_CC\"\nAKBUILD_OPTIONS=\"$DEF_AKBUILD_OPTIONS\"\nAKBUILD_DEFCONFIG=\"$DEF_AKBUILD_DEFCONFIG\"\nAKBUILD_OUTPUTFILE=\"$DEF_AKBUILD_OUTPUTFILE\"\nAKBUILD_DTBO=$DEF_AKBUILD_DTBO\nAKBUILD_CCACHE=$DEF_AKBUILD_CCACHE\nAKBUILD_CCACHE_DIR=\"$DEF_AKBUILD_CCACHE_DIR\"\n\n# Kernel\nAKBUILD_KERNELURL=\"$DEF_AKBUILD_KERNELURL\"\nAKBUILD_KERNELBRANCH=\"$DEF_AKBUILD_KERNELBRANCH\"\nAKBUILD_KERNELNAME=\"$DEF_AKBUILD_KERNELNAME\"\nAKBUILD_KDEPTH1=$DEF_AKBUILD_KDEPTH1\n\n# Clang\nAKBUILD_PREINSTALLED_COMPILER=$DEF_AKBUILD_PREINSTALLED_COMPILER\nAKBUILD_COMPILERURL=\"$DEF_AKBUILD_COMPILERURL\"\nAKBUILD_COMPILERBRANCH=\"$DEF_AKBUILD_COMPILERBRANCH\"\nAKBUILD_COMPILER=\"$DEF_AKBUILD_COMPILER\"\nAKBUILD_COMPILERBIN=\"$DEF_AKBUILD_COMPILERBIN\"\nAKBUILD_COMPILERLIB=\"$DEF_AKBUILD_COMPILERLIB\"\n\n# Device\nAKBUILD_ANYKERNEL=$DEF_AKBUILD_ANYKERNEL\nAKBUILD_ANYKERNELURL=\"$DEF_AKBUILD_ANYKERNELURL\"\nAKBUILD_ANYKERNELBRANCH=\"$DEF_AKBUILD_ANYKERNELBRANCH\"\nAKBUILD_DEVICENAME=\"$DEF_AKBUILD_DEVICENAME\""

AKBUILD_L_1="Enabled"
AKBUILD_L_2="Disabled"
AKBUILD_L_3="Preinstalled"
AKBUILD_L_4="Show akbuild version"
AKBUILD_L_5="Show this"
AKBUILD_L_6="Actions with configuration files"
AKBUILD_L_7="Clone the kernel and the compiler"
AKBUILD_L_8="Update the kernel and the compiler with$BDFC git pull$DFC if possible"
AKBUILD_L_9="Start building the kernel"
AKBUILD_L_10="Remove output folder"
AKBUILD_L_11="Show current configuration"
AKBUILD_L_12="Load configuration from file"
AKBUILD_L_13="Load configuration from default file"
AKBUILD_L_14="Regenerate default configuration file"
AKBUILD_L_15="Regenerate configuration to file"
AKBUILD_L_16="Clone/Pull the kernel and the compiler"
AKBUILD_L_17="Clone/Pull only the kernel"
AKBUILD_L_18="Clone/Pull only the compiler"
AKBUILD_L_19="Work path"
AKBUILD_L_20="Jobs"
AKBUILD_L_21="Builder"
AKBUILD_L_22="Kernel image"
AKBUILD_L_23="Build dtbo.img"
AKBUILD_L_24="Ccache"
AKBUILD_L_25="Kernel"
AKBUILD_L_26="Compiler binaries"
AKBUILD_L_27="AnyKernel"
AKBUILD_L_28="Device"
AKBUILD_L_29="Configuration has been loaded from"
AKBUILD_L_30="Configuration file does not exist, regenerate it"
AKBUILD_L_31="You must specify the file"
AKBUILD_L_32="Configuration file has been regenerated in"
AKBUILD_L_33="Default configuration file has been regenerated"
AKBUILD_L_34="The kernel has already been cloned"
AKBUILD_L_35="Error cloning the kernel"
AKBUILD_L_36="You are using the compiler from external path"
AKBUILD_L_37="The compiler has already been cloned"
AKBUILD_L_38="Error cloning the compiler"
AKBUILD_L_39="Error pulling the kernel"
AKBUILD_L_40="The kernel is not cloned"
AKBUILD_L_41="Error pulling the compiler"
AKBUILD_L_42="The compiler is not cloned"
AKBUILD_L_43="Build failed!"
AKBUILD_L_44="Build completed successfully!"
AKBUILD_L_45="WARNING"
AKBUILD_L_46="Unable to clone AnyKernel3"
AKBUILD_L_47="dtbo.img not found"
AKBUILD_L_48="zip is not installed or something else is wrong"
AKBUILD_L_49="Output file not found"
AKBUILD_L_50="Something went wrong"
AKBUILD_L_51="Output package"
AKBUILD_L_52="Removing output folder..."
AKBUILD_L_53="Output folder has been removed"
AKBUILD_L_54="Invalid argument"
AKBUILD_L_55="Your system language"
AKBUILD_L_56="Downloading the language file..."
AKBUILD_L_57="Download failed, language not supported or you have connection issues"
AKBUILD_L_58="Download completed successfully, language has been applied"
AKBUILD_L_59="Download the language file"
AKBUILD_L_60="Compiler libraries"
AKBUILD_L_61="Undefined"
AKBUILD_L_62="Write defconfig"
AKBUILD_L_63="Defconfig has been written successfully"
AKBUILD_L_64="Defconfig has not been written!"
AKBUILD_L_65="Output folder not found or it has been already removed"


AKCONFIGFILE=$DEF_CONFIGFILE
CACHE=$HOME/.cache
CACHECONFIGFILE=$CACHE/akbuild
LOCAL=$HOME/.local/share/akbuild
LANGFILE=$LOCAL/akbuild_$LANG

if [ -f $CACHECONFIGFILE ]; then
. $CACHECONFIGFILE
else
if [ -f $AKCONFIGFILE ]; then
. $AKCONFIGFILE
else
echo -e "$AKBUILD_CONFIG" > $AKCONFIGFILE
. $AKCONFIGFILE
fi
fi
if [ -f $LANGFILE ]; then
. $LANGFILE
fi
export KBUILD_BUILD_USER=$AKBUILD_USERNAME
export KBUILD_BUILD_HOST=$AKBUILD_HOSTNAME
if [ "$AKBUILD_DTBO" = "true" ]; then
AKDTBO="dtbo.img"
AKDTBOS="$AKBUILD_L_1"
else
AKDTBO=""
AKDTBOS="$AKBUILD_L_2"
fi
if [ "$AKBUILD_CCACHE" = "true" ]; then
AKCC="ccache $AKBUILD_CC"
if [ "$AKBUILD_CCACHE_DIR" ]; then
export CCACHE_DIR="$AKBUILD_CCACHE_DIR"
AKCCS="$AKBUILD_L_1 ($CCACHE_DIR)"
else
export CCACHE_DIR="$AKBUILD_PATH/ccache"
mkdir -p $CCACHE_DIR
echo "max_size = 10G" > $CCACHE_DIR/ccache.conf
AKCCS="$AKBUILD_L_1"
fi
else
AKCC="$AKBUILD_CC"
AKCCS="$AKBUILD_L_2"
fi
if [ "$AKBUILD_KDEPTH1" = "true" ]; then
AKDEPTH="--depth=1"
else
AKDEPTH=""
fi
if [ "$AKBUILD_PREINSTALLED_COMPILER" = "true" ]; then
AKCOMPILER="$AKBUILD_PATH"
AKCS="$AKBUILD_L_3"
AKLS="$AKBUILD_L_3"
else
if [ "$AKBUILD_COMPILER" ]; then
AKCOMPILER="$AKBUILD_COMPILER"
else
AKCOMPILER="$AKBUILD_PATH/compiler"
fi
if [ "$AKBUILD_COMPILERBIN" ]; then
export PATH="$AKCOMPILER/$AKBUILD_COMPILERBIN:$PATH"
AKCS="$AKCOMPILER/$AKBUILD_COMPILERBIN"
else
AKCS="$AKBUILD_L_61"
fi
if [ "$AKBUILD_COMPILERLIB" ]; then
export LD_LIBRARY_PATH="$AKCOMPILER/$AKBUILD_COMPILERLIB:$LD_LIBRARY_PATH"
AKLS="$AKCOMPILER/$AKBUILD_COMPILERLIB"
else
AKLS="$AKBUILD_L_61"
fi
fi
if [ "$AKBUILD_ANYKERNEL" = "true" ]; then
AKANYKERNEL="$AKBUILD_L_1"
else
AKANYKERNEL="$AKBUILD_L_2"
fi
AKKERNELS="$AKDEPTH $AKBUILD_KERNELURL -b $AKBUILD_KERNELBRANCH $AKBUILD_PATH/kernel"
AKCOMPILERS="--depth=1 $AKBUILD_COMPILERURL -b $AKBUILD_COMPILERBRANCH $AKCOMPILER"

if [ "$1" = "version" ] || [ "$1" = "help" ] || [ "$1" = "config" ] || [ "$1" = "clone" ] || [ "$1" = "pull" ] || [ "$1" = "build" ] || [ "$1" = "clean" ] || [ "$1" = "language" ] || [ "$1" = "defconfig" ]; then

if [ "$1" = "version" ] && [ "$2" = "" ]; then
echo -e "akbuild version $AKBUILD_VERSION"
else
if [ "$1" = "version" ] && [ "$2" ]; then
echo -e "$AKBUILD_L_54 '$2'"
fi
fi

if [ "$1" = "help" ] && [ "$2" = "" ]; then
echo -e "\tversion\t\t$AKBUILD_L_4\n\thelp\t\t$AKBUILD_L_5\n\tconfig\t\t$AKBUILD_L_6\n\tclone\t\t$AKBUILD_L_7\n\tpull\t\t$AKBUILD_L_8\n\tbuild\t\t$AKBUILD_L_9\n\tclean\t\t$AKBUILD_L_10\n\tlanguage\t$AKBUILD_L_59\n\tdefconfig\t$AKBUILD_L_62\n\n\takbuild config\n\t\t$AKBUILD_L_11\n\n\takbuild config [-c <filename>] [-d] [-r] [-r <filename>]\n\n\t\t-c <filename>, --custom <filename>\n\t\t\t$AKBUILD_L_12\n\n\t\t-d, --default\n\t\t\t$AKBUILD_L_13\n\n\t\t-r, --regenerate\n\t\t\t$AKBUILD_L_14\n\n\t\t-r <filename>, --regenerate <filename>\n\t\t\t$AKBUILD_L_15\n\n\takbuild clone/pull\n\t\t$AKBUILD_L_16\n\n\takbuild clone/pull kernel\n\t\t$AKBUILD_L_17\n\n\takbuild clone/pull compiler\n\t\t$AKBUILD_L_18"
else
if [ "$1" = "help" ] && [ "$2" ]; then
echo -e "$AKBUILD_L_54 '$2'"
fi
fi

if [ "$1" = "config" ] && [ "$2" = "" ] || [ "$2" = "-c" ] || [ "$2" = "--custom" ] || [ "$2" = "-d" ] || [ "$2" = "--default" ] || [ "$2" = "-r" ] || [ "$2" = "--regenerate" ]; then
if [ "$1" = "config" ] && [ "$2" = "" ]; then
echo -e "$AKBUILD_L_19: $AKBUILD_PATH\n$AKBUILD_L_20: $AKBUILD_JOBS\n$AKBUILD_L_21: $KBUILD_BUILD_USER@$KBUILD_BUILD_HOST\n$AKBUILD_L_22: $AKBUILD_OUTPUTFILE\n$AKBUILD_L_23: $AKDTBOS\n$AKBUILD_L_24: $AKCCS\n$AKBUILD_L_25: $AKBUILD_KERNELNAME\n$AKBUILD_L_26: $AKCS\n$AKBUILD_L_60: $AKLS\n$AKBUILD_L_27: $AKANYKERNEL\n$AKBUILD_L_28: $AKBUILD_DEVICENAME"
fi
if [ "$1" = "config" ] && [ "$2" = "-c" ] || [ "$2" = "--custom" ] && [ "$3" ]; then
if [ -f $3 ]; then
. $3
echo -e "$AKBUILD_L_29 $3"
else
echo -e "$AKBUILD_L_30"
fi
else
if [ "$1" = "config" ] && [ "$2" = "-c" ] || [ "$2" = "--custom" ]; then
echo -e "$AKBUILD_L_31"
fi
fi
if [ "$1" = "config" ] && [ "$2" = "-d" ] || [ "$2" = "--default" ]; then
if [ -f $AKCONFIGFILE ]; then
. $AKCONFIGFILE
echo -e "$AKBUILD_L_29 $AKCONFIGFILE"
else
echo -e "$AKBUILD_L_30"
fi
fi
if [ "$1" = "config" ] && [ "$2" = "-r" ] || [ "$2" = "--regenerate" ] && [ "$3" ]; then
echo -e "$AKBUILD_CONFIG" > $3
echo -e "$AKBUILD_L_32 $3"
else
if [ "$1" = "config" ] && [ "$2" = "-r" ] || [ "$2" = "--regenerate" ]; then
echo -e "$AKBUILD_CONFIG" > $AKCONFIGFILE
echo -e "$AKBUILD_L_33"
fi
fi
else
if [ "$1" = "config" ] && [ "$2" ]; then
echo -e "$AKBUILD_L_54 '$2'"
fi
fi

if [ "$1" = "clone" ] && [ "$2" = "" ] || [ "$2" = "kernel" ] || [ "$2" = "compiler" ]; then
if [ "$1" = "clone" ] && [ "$2" = "" ]; then
if [ -d $AKBUILD_PATH/kernel ]; then
echo -e "$AKBUILD_L_34"
else
if ! git clone $AKKERNELS; then
echo -e "$AKBUILD_L_35"
fi
fi
if [ -d $AKCOMPILER ]; then
if [ $AKBUILD_COMPILER ]; then
echo -e "$AKBUILD_L_36"
else
echo -e "$AKBUILD_L_37"
fi
else
if ! git clone $AKCOMPILERS; then
echo -e "$AKBUILD_L_38"
fi
fi
fi
if [ "$1" = "clone" ] && [ "$2" = kernel ]; then
if [ -d $AKBUILD_PATH/kernel ]; then
echo -e "$AKBUILD_L_34"
else
if ! git clone $AKKERNELS; then
echo -e "$AKBUILD_L_35"
fi
fi
fi
if [ "$1" = "clone" ] && [ "$2" = compiler ]; then
if [ -d $AKCOMPILER ]; then
if [ $AKBUILD_COMPILER ]; then
echo -e "$AKBUILD_L_36"
else
echo -e "$AKBUILD_L_37"
fi
else
if ! git clone $AKCOMPILERS; then
echo -e "$AKBUILD_L_38"
fi
fi
fi
else
if [ "$1" = "clone" ] && [ "$2" ]; then
echo -e "$AKBUILD_L_54 '$2'"
fi
fi

if [ "$1" = "pull" ] && [ "$2" = "" ] || [ "$2" = "kernel" ] || [ "$2" = "compiler" ]; then
if [ "$1" = "pull" ] && [ "$2" = "" ]; then
if [ -d $AKBUILD_PATH/kernel ]; then
cd $AKBUILD_PATH/kernel
if ! git pull; then
echo -e "$AKBUILD_L_39"
fi
else
echo -e "$AKBUILD_L_40"
fi
if [ -d $AKCOMPILER ]; then
cd $AKCOMPILER
if ! git pull; then
echo -e "$AKBUILD_L_41"
fi
else
echo -e "$AKBUILD_L_42"
fi
fi
if [ "$1" = "pull" ] && [ "$2" = "kernel" ]; then
if [ -d $AKBUILD_PATH/kernel ]; then
cd $AKBUILD_PATH/kernel
if ! git pull; then
echo -e "$AKBUILD_L_39"
fi
else
echo -e "$AKBUILD_L_40"
fi
fi
if [ "$1" = "pull" ] && [ "$2" = "compiler" ]; then
if [ -d $AKCOMPILER ]; then
cd $AKCOMPILER
if ! git pull; then
echo -e "$AKBUILD_L_41"
fi
else
echo -e "$AKBUILD_L_42"
fi
fi
else
if [ "$1" = "pull" ] && [ "$2" ]; then
echo -e "$AKBUILD_L_54 '$2'"
fi
fi

if [ "$1" = "build" ] && [ "$2" = "" ]; then
if [ -d $AKBUILD_PATH/kernel ]; then
if [ -d $AKCOMPILER ]; then
if
SECONDS=0
cd $AKBUILD_PATH/kernel
make -j$AKBUILD_JOBS O=$AKBUILD_PATH/out ARCH=$AKBUILD_ARCH CC="$AKCC" $AKBUILD_OPTIONS $AKBUILD_DEFCONFIG
make -j$AKBUILD_JOBS O=$AKBUILD_PATH/out ARCH=$AKBUILD_ARCH CC="$AKCC" $AKBUILD_OPTIONS $AKBUILD_OUTPUTFILE $AKDTBO
then
AKMINUTES=$((SECONDS / 60)) && AKSECONDS=$((SECONDS % 60)) && if(($AKMINUTES<=9)); then AKMINUTES=0$AKMINUTES; fi && if(($AKSECONDS<=9)); then AKSECONDS=0$AKSECONDS; fi && AKTIME=$AKMINUTES:$AKSECONDS
cd $AKBUILD_PATH
if [ $AKBUILD_ANYKERNEL = true ]; then
if [ -f "out/arch/$AKBUILD_ARCH/boot/$AKBUILD_OUTPUTFILE" ]; then
ZIPNAME="$AKBUILD_KERNELNAME-$AKBUILD_DEVICENAME-$(date '+%Y%m%d').zip"
if ! git clone -q $AKBUILD_ANYKERNELURL -b $AKBUILD_ANYKERNELBRANCH AnyKernel3; then
echo -e "$RDFC\n$AKBUILD_L_43 $AKBUILD_L_46 | $AKTIME$DFC"
else
cp out/arch/$AKBUILD_ARCH/boot/$AKBUILD_OUTPUTFILE AnyKernel3
if [ $AKBUILD_DTBO = true ]; then
if [ -f "out/arch/$AKBUILD_ARCH/boot/dtbo.img" ]; then
cp out/arch/$AKBUILD_ARCH/boot/dtbo.img AnyKernel3
else
echo -e "$CDFC$AKBUILD_L_45:$DFC $AKBUILD_L_47"
fi
fi
cd AnyKernel3
if ! zip -r9 "../$ZIPNAME" * -x '*.git*' README.md *placeholder; then
echo -e "$RDFC\n$AKBUILD_L_43 $AKBUILD_L_48 | $AKTIME$DFC"
else
cd ..
rm -rf AnyKernel3
echo -e "$GDFC\n$AKBUILD_L_44 | $AKTIME$DFC\n$AKBUILD_L_51: $ZIPNAME"
fi
fi
else
echo -e "$RDFC\n$AKBUILD_L_43 $AKBUILD_L_49 | $AKTIME$DFC"
fi
else
echo -e "$GDFC\n$AKBUILD_L_44 | $AKTIME$DFC"
fi
else
AKMINUTES=$((SECONDS / 60)) && AKSECONDS=$((SECONDS % 60)) && if(($AKMINUTES<=9)); then AKMINUTES=0$AKMINUTES; fi && if(($AKSECONDS<=9)); then AKSECONDS=0$AKSECONDS; fi && AKTIME=$AKMINUTES:$AKSECONDS
cd $AKBUILD_PATH
echo -e "$RDFC\n$AKBUILD_L_43 $AKBUILD_L_50 | $AKTIME$DFC"
fi
else
echo -e "$AKBUILD_L_42"
fi
else
echo -e "$AKBUILD_L_40"
fi
else
if [ "$1" = "build" ] && [ "$2" ]; then
echo -e "$AKBUILD_L_54 '$2'"
fi
fi

if [ "$1" = "clean" ] && [ "$2" = "" ]; then
if [ -d $AKBUILD_PATH/out ]; then
echo -e "$AKBUILD_L_52"
rm -rf $AKBUILD_PATH/out
echo -e "\n$AKBUILD_L_53"
else
echo -e "$AKBUILD_L_65"
fi
else
if [ "$1" = "clean" ] && [ "$2" ]; then
echo -e "$AKBUILD_L_54 '$2'"
fi
fi

if [ "$1" = "language" ] && [ "$2" = "" ]; then
echo -e "$AKBUILD_L_55: $LANG\n$AKBUILD_L_56"
mkdir -p $LOCAL
if ! wget -q https://raw.githubusercontent.com/Sarisan/scripts/master/akbuild/akbuild_$LANG -O $LANGFILE; then
echo -e "\n$AKBUILD_L_57"
else
echo -e "\n$AKBUILD_L_58"
fi
else
if [ "$1" = "language" ] && [ "$2" ]; then
echo -e "$AKBUILD_L_54 '$2'"
fi
fi

if [ "$1" = "defconfig" ] && [ "$2" = "" ]; then
if [ -d $AKBUILD_PATH/kernel ]; then
if [ -d $AKCOMPILER ]; then
if
SECONDS=0
cd $AKBUILD_PATH/kernel
make -j$AKBUILD_JOBS O=$AKBUILD_PATH/out ARCH=$AKBUILD_ARCH CC="$AKCC" $AKBUILD_OPTIONS $AKBUILD_DEFCONFIG
then
AKMINUTES=$((SECONDS / 60)) && AKSECONDS=$((SECONDS % 60)) && if(($AKMINUTES<=9)); then AKMINUTES=0$AKMINUTES; fi && if(($AKSECONDS<=9)); then AKSECONDS=0$AKSECONDS; fi && AKTIME=$AKMINUTES:$AKSECONDS
cd $AKBUILD_PATH
echo -e "$GDFC\n$AKBUILD_L_63 | $AKTIME$DFC"
else
AKMINUTES=$((SECONDS / 60)) && AKSECONDS=$((SECONDS % 60)) && if(($AKMINUTES<=9)); then AKMINUTES=0$AKMINUTES; fi && if(($AKSECONDS<=9)); then AKSECONDS=0$AKSECONDS; fi && AKTIME=$AKMINUTES:$AKSECONDS
cd $AKBUILD_PATH
echo -e "$RDFC\n$AKBUILD_L_64 $AKBUILD_L_50 | $AKTIME$DFC"
fi
else
echo -e "$AKBUILD_L_42"
fi
else
echo -e "$AKBUILD_L_40"
fi
else
if [ "$1" = "defconfig" ] && [ "$2" ]; then
echo -e "$AKBUILD_L_54 '$2'"
fi
fi

else
if [ "$1" ]; then
echo -e "$AKBUILD_L_54 '$1'"
fi
fi

mkdir -p $CACHE
echo -e "# Android kernel build configuration\nAKBUILD_PATH=\"$AKBUILD_PATH\"\nAKBUILD_JOBS=\"$AKBUILD_JOBS\"\nAKBUILD_USERNAME=\"$AKBUILD_USERNAME\"\nAKBUILD_HOSTNAME=\"$AKBUILD_HOSTNAME\"\nAKBUILD_ARCH=\"$AKBUILD_ARCH\"\nAKBUILD_CC=\"$AKBUILD_CC\"\nAKBUILD_OPTIONS=\"$AKBUILD_OPTIONS\"\nAKBUILD_DEFCONFIG=\"$AKBUILD_DEFCONFIG\"\nAKBUILD_OUTPUTFILE=\"$AKBUILD_OUTPUTFILE\"\nAKBUILD_DTBO=$AKBUILD_DTBO\nAKBUILD_CCACHE=$AKBUILD_CCACHE\nAKBUILD_CCACHE_DIR=\"$AKBUILD_CCACHE_DIR\"\n\n# Kernel\nAKBUILD_KERNELURL=\"$AKBUILD_KERNELURL\"\nAKBUILD_KERNELBRANCH=\"$AKBUILD_KERNELBRANCH\"\nAKBUILD_KERNELNAME=\"$AKBUILD_KERNELNAME\"\nAKBUILD_KDEPTH1=$AKBUILD_KDEPTH1\n\n# Clang\nAKBUILD_PREINSTALLED_COMPILER=$AKBUILD_PREINSTALLED_COMPILER\nAKBUILD_COMPILERURL=\"$AKBUILD_COMPILERURL\"\nAKBUILD_COMPILERBRANCH=\"$AKBUILD_COMPILERBRANCH\"\nAKBUILD_COMPILER=\"$AKBUILD_COMPILER\"\nAKBUILD_COMPILERBIN=\"$AKBUILD_COMPILERBIN\"\nAKBUILD_COMPILERLIB=\"$AKBUILD_COMPILERLIB\"\n\n# Device\nAKBUILD_ANYKERNEL=$AKBUILD_ANYKERNEL\nAKBUILD_ANYKERNELURL=\"$AKBUILD_ANYKERNELURL\"\nAKBUILD_ANYKERNELBRANCH=\"$AKBUILD_ANYKERNELBRANCH\"\nAKBUILD_DEVICENAME=\"$AKBUILD_DEVICENAME\"" > $CACHECONFIGFILE
