#!/usr/bin/env dash
#
# Copyright (C) 2024 Maria Lisina
#
# Telegram Media Reencoder

set -e

for required in ffmpeg
do
    if ! command -v ${required} > /dev/null
    then
        missing="${missing} ${required}"
    fi
done

if [ -n "${missing}" ]
then
    echo "Missing dependencies:${missing}\n" \
        "For more information follow: https://command-not-found.com/"
    exit 1
fi

tgencode_version="1.6"

if [ -n "${1}" ]
then
    while getopts haf:qb tgencode_options
    do
        case "${tgencode_options}" in
            (h)
                tgencode_help=0
            ;;
            (a)
                tgencode_noaudio=0
            ;;
            (f)
                tgencode_fps=${OPTARG}
            ;;
            (q)
                tgencode_quiet=0
            ;;
            (b)
                tgencode_break=0
            ;;
            (*)
                echo "See '${0} -h'"
                exit 1
            ;;
        esac
    done

    shift $((OPTIND - 1))
else
    tgencode_help=0
fi

if [ -n "${tgencode_help}" ]
then
    echo "Telegram Media Reencoder v${tgencode_version}" \
        "\n\nUsage: ${0} [options] [file]" \
        "\n\nOptions:" \
        "\n  -h\t\tShow help information" \
        "\n  -a\t\tRemove audio stream (Telegram GIF)" \
        "\n  -f <num>\tSet custom frame rate" \
        "\n  -q\t\tSuppress all ffmpeg output" \
        "\n  -b\t\tDo not exit on error"
    exit 0
fi

if [ -n "${tgencode_noaudio}" ]
then
    tgencode_acodec="-an"
else
    tgencode_acodec="-acodec aac"
fi

if [ -z "${tgencode_fps}" ]
then
    tgencode_fps="source_fps"
fi

if [ -n "${tgencode_quiet}" ]
then
    tgencode_loglevel="quiet"
else
    tgencode_loglevel="info"
fi

if [ -z "${1}" ]
then
    echo "No input file specified. See '${0} -h'"
    exit 1
fi

tgencode_exit=0

for tgencode_input in ${@}
do
    if ! [ -f "${tgencode_input}" ]
    then
        tgencode_exit=1
        echo "No file found: '${tgencode_input}'"

        if [ -z "${tgencode_break}" ]
        then
            exit ${tgencode_exit}
        fi

        continue
    fi

    tgencode_output="${tgencode_input%\.*}_t.mp4"

    if ffmpeg -i "${tgencode_input}" \
        -loglevel ${tgencode_loglevel} \
        -profile:v high \
        -vcodec libx264 \
        -vf "fps=${tgencode_fps},pad=ceil(iw/2)*2:ceil(ih/2)*2" \
        -pix_fmt yuv420p \
        ${tgencode_acodec} \
        -movflags +faststart \
        "${tgencode_output}" -y
    then
        echo "Succesfully reencoded: '${tgencode_output}'"
    else
        tgencode_exit=1
        echo "Failed to reencode: '${tgencode_input}'"

        if [ -z "${tgencode_break}" ]
        then
            exit ${tgencode_exit}
        fi
    fi
done

exit ${tgencode_exit}
